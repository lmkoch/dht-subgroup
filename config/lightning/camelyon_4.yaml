---
dataset:
    # dataset
    ds:
        basic_preproc:
            img_size: 96
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
        data_augmentation:   # available operations are list in 'data_augmentation_args' below
            - random_crop
            - horizontal_flip
            - vertical_flip
            - color_distortion
            - rotation
        p:
            dataset: 'camelyon'
            # data_root: '/gpfs01/berens/user/lkoch/data'
            data_root: './data/download_complete'
            # data_root: '~/data'
            subset_params:
                center: [0, 1, 2, 3, 4]
        q:
            dataset: 'camelyon'
            # data_root: '/gpfs01/berens/user/lkoch/data'
            data_root: './data/download_complete'
            # data_root: '~/data'
            subset_params:
                center: [4]
        data_augmentation_args:
          horizontal_flip:
            prob: 0.5
          vertical_flip:
            prob: 0.5
          color_distortion:
            prob: 1.0
            brightness: 0.2
            contrast: 0.2
            saturation: 0.1
            hue: 0.1
          random_crop: # randomly crop and resize to input_size
            prob: 1.0
            scale: [0.87, 1.15] # range of size of the origin size cropped
            ratio: [0.7, 1.3] # range of aspect ratio of the origin aspect ratio cropped
          rotation:
            prob: 1.0
            degrees: [-180, 180]
          translation:
            prob: 1
            range: [0.2, 0.2]
          grayscale: # randomly convert image to grayscale
            prob: 0.5
          gaussian_blur: # only available for torch version >= 1.7.1.
            prob: 0.2
            kernel_size: 7
            sigma: 0.5
          value_fill: 0 # NOT a data augmentation operation. pixel fill value for the area outside the image
    # dataloader
    dl:
        batch_size: 16
        p:
            use_sampling: False
            sampling_by_variable: 'hospitals'
            sampling_weights: [1, 1, 1, 1, 1]
        q:
            use_sampling: False
            sampling_by_variable: 'hospitals'
            sampling_weights: [0, 0, 1, 0, 0]
        num_workers: 4
        pin_memory: True
mmd:
    model:
        img_size: 96
        in_channels: 3
        loss_type: 'mmd2'
        loss_lambda: 10**(-6)
        feature_extractor: 'liu' # 'resnet50' # 
        optim_config:
            optimizer: ADAM # SGD / ADAM
            learning_rate: 1.e-5 # initial learning rate
            momentum: 0.9 # only for SGD. set to 0 to disable momentum
            nesterov: True # only for SGD.
            weight_decay: 0.0005 # set to 0 to disable weight decay
            lr_scheduler: True    
    trainer:
        epochs: 50 
domain_classifier:
    model:
        arch: 'resnet50'
        in_channels: 3                                                  # Adapt depending on dataset
        n_outputs: 2
        loss_type: "cross_entropy" # mean_squared_error
        optim_config:
            optimizer: ADAM # SGD / ADAM
            learning_rate: 1.e-6 # initial learning rate
            momentum: 0.9 # only for SGD. set to 0 to disable momentum
            nesterov: True # only for SGD.
            weight_decay: 0.0005 # set to 0 to disable weight decay
            lr_scheduler: True        
    trainer:
        epochs: 25                                                      # Adapt depending on dataset
    eval:
        n_permute: 100
        alpha: 0.05
        use_tensorboard: True
        n_test_reps: 10
        eval_interval_globalstep: 300
        num_eval_batches: 30
        plot_images_first_only: True
task_classifier:
    model:
        arch: 'resnet50'
        in_channels: 3    
        n_outputs: 2 
        loss_type: "cross_entropy" # mean_squared_error
        optim_config:
            optimizer: ADAM # SGD / ADAM
            learning_rate: 1.e-6 # initial learning rate
            momentum: 0.9 # only for SGD. set to 0 to disable momentum
            nesterov: True # only for SGD.
            weight_decay: 0.0005 # set to 0 to disable weight decay
            lr_scheduler: True
    trainer:
        epochs: 15                                                       # Adapt depending on dataset



